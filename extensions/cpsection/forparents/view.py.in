#!/usr/bin/python

"""
The description file for the 'For Parents' control panel.
"""

import os

from gettext import gettext as _
from gi.repository import Gtk, Pango, Gdk, GObject
from sugar3.graphics import style
from jarabe import config, parentalcontrols
from jarabe.model import shell

class ParentalControls(SectionView):
    def __init__(self, model, alerts=None):
        SectionView.__init__(self)

        self._model = model

        self.set_border_width(style.DEFAULT_SPACING * 2)
        self.set_spacing(style.DEFAULT_SPACING)
        self.connect('button_press_event', self.__pressed_cb)

        scrollwindow = Gtk.ScrolledWindow()
        scrollwindow.set_policy(Gtk.PolicyType.NEVER, Gtk.PolicyType.AUTOMATIC)
        self.pack_start(scrollwindow, True, True, 0)
        scrollwindow.show()

        self._vbox = Gtk.Box(orientation=Gtk.Orientation.VERTICAL)
        scrollwindow.add_with_viewport(self._vbox)
        self._vbox.show()

        self._vbox_two = Gtk.Box(orientation=Gtk.Orientation.VERTICAL)
        self._vbox.pack_start(self.vbox_two, True, True, 0)
        self._vbox_two.set_size_request(15, -1)
        self._vbox_two.show()
        self._vbox_three = Gtk.Box(orientation=Gtk.Orientation.VERTICAL)
        self._vbox.pack_start(self.vbox_two, True, True, 0)
        self._vbox_three.show()

        self.check_button = Gtk.CheckButton()
        on_or_off_active_state = self.check_button.get_active()
        self._vbox_two.pack_start(self.check_button, True, True, 0)

        label = Gtk.Label(_("Turn on parental controls"), xalign=0)
        self._vbox_three.pack_start(self.label, True, True, 0)

        self._vbox_four = Gtk.Box(orientation=Gtk.Orientation.VERTICAL)
        self._vbox_four.set_size_request(15, -1)
        self._vbox_five = Gtk.Box(orientation=Gtk.Orientation.VERTICAL)
        self._vbox_three.pack_start(self.vbox_four, True, True, 0)
        self._vbox_three.pack_start(self.vbox_five, True, True, 0)
        self._vbox_four.show()
        self._vbox_five.show()

        self.check_button = Gtk.CheckButton()
        activity_active_state = self.check_button.get_active()
        self.check_button.connect("toggled", self.check_activity_on_or_off_cb)
        self._vbox_four.pack_start(self.check_button, True, True, 0)

        label = Gtk.Label(_("Limit usable activities to")), xalign=0)
        self._vbox_five.pack_start(self.label, True, True, 0)

        activity = {}
        activities_active_state = {}
        for i in os.listdir("@sysconfdir@/sugar/activities"):
            text = shell.get_activity_name(i)
            activity[text] = Gtk.CheckButton(text)
            activities_active_state[text] = activity[text].get_active()
            activity[text].set_sensitive(False)
            self._vbox_five.pack_start(self.check_button, True, True, 0)

        self.check_button = Gtk.CheckButton()
        url_active_state = self.check_button.get_active()
        self.check_button.connect("toggled", self.check_url_on_or_off_cb)
        self._vbox_four.pack_start(self.check_button, True, True, 0)

        label = Gtk.Label(_("Limit accessible URLs to "
                            "(leave blank to disable Internet access "
                            "completely)")), xalign=0)
        self._vbox_five.pack_start(self.label, True, True, 0)

        self.entry = Gtk.Entry()
        self.entry.set_text("Enter URLs here")
        self.entry.set_sensitive(False)
        self._vbox_five.pack_start(self.entry, True, True, 0)

    def __pressed_cb(self, widget):
        if on_or_off_active_state == True:
            parentalcontrols._turn_me_on()
        else:
            parentalcontrols._turn_me_off()
        for i in os.listdir("@sysconfdir@/sugar/activities"):
            if activities_active_state == True:
                model._limit_permitted_activities(text, True)
                # TODO: output should end with a newline
            else:
                model._limit_permitted_activities(text, False)
        if url_entry_text == "":
            model._limit_internet_access(True)
        else:
            model._limit_internet_access(False)
            model._limit_permitted_web_sites(entry_text)

    def check_activity_on_or_off_cb(self, widget):
        for i in os.listdir("@sysconfdir@/sugar/activities"):
            if activity_active_state == True:
                activity[text].set_sensitive(True)
            else:
                activity[text].set_sensitive(False)

    def check_url_on_or_off_cb(self, widget):
        if url_active_state == True:
            self.entry.set_sensitive(True)
            url_entry_text = self.entry.get_text()
        else:
            self.entry.set_sensitive(False)
            del url_entry_text
